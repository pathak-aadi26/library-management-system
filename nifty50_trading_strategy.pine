//@version=5
strategy("NIFTY 50 Perfect Entry/Exit Strategy", overlay=true, default_qty_type=strategy.percent_of_equity, default_qty_value=10)

// Input Parameters
rsi_length = input.int(14, title="RSI Length", minval=1)
rsi_overbought = input.int(70, title="RSI Overbought Level", minval=50, maxval=100)
rsi_oversold = input.int(30, title="RSI Oversold Level", minval=0, maxval=50)

ema_short = input.int(9, title="Short EMA", minval=1)
ema_long = input.int(21, title="Long EMA", minval=1)
sma_trend = input.int(50, title="Trend SMA", minval=1)

macd_fast = input.int(12, title="MACD Fast Length", minval=1)
macd_slow = input.int(26, title="MACD Slow Length", minval=1)
macd_signal = input.int(9, title="MACD Signal Length", minval=1)

bb_length = input.int(20, title="Bollinger Bands Length", minval=1)
bb_mult = input.float(2.0, title="Bollinger Bands Multiplier", minval=0.1)

volume_ma_length = input.int(20, title="Volume MA Length", minval=1)
volume_threshold = input.float(1.5, title="Volume Threshold (x of avg)", minval=1.0)

atr_length = input.int(14, title="ATR Length for Stop Loss", minval=1)
atr_mult = input.float(2.0, title="ATR Multiplier for Stop Loss", minval=0.1)

risk_reward_ratio = input.float(2.0, title="Risk Reward Ratio", minval=1.0)

// Technical Indicators
// RSI
rsi = ta.rsi(close, rsi_length)

// Moving Averages
ema9 = ta.ema(close, ema_short)
ema21 = ta.ema(close, ema_long)
sma50 = ta.sma(close, sma_trend)

// MACD
[macd_line, signal_line, histogram] = ta.macd(close, macd_fast, macd_slow, macd_signal)

// Bollinger Bands
[bb_upper, bb_middle, bb_lower] = ta.bb(close, bb_length, bb_mult)

// Volume Analysis
volume_ma = ta.sma(volume, volume_ma_length)
high_volume = volume > (volume_ma * volume_threshold)

// ATR for Stop Loss
atr = ta.atr(atr_length)

// Stochastic
k = ta.stoch(close, high, low, 14)
d = ta.sma(k, 3)

// Williams %R
williams_r = ta.wpr(14)

// Parabolic SAR
sar = ta.sar(0.02, 0.02, 0.2)

// Additional Volume Indicators
// Volume Price Trend (VPT)
vpt = ta.cum(volume * (close - close[1]) / close[1])
vpt_sma = ta.sma(vpt, 20)

// On Balance Volume (OBV)
obv = ta.obv

// Trend Analysis
uptrend = ema9 > ema21 and ema21 > sma50 and close > sma50
downtrend = ema9 < ema21 and ema21 < sma50 and close < sma50

// Momentum Conditions
bullish_momentum = rsi > 50 and macd_line > signal_line and k > d
bearish_momentum = rsi < 50 and macd_line < signal_line and k < d

// Volume Confirmation
volume_confirmation = high_volume and volume > volume[1]

// Support and Resistance Levels
pivot_high = ta.pivothigh(high, 5, 5)
pivot_low = ta.pivotlow(low, 5, 5)

// Entry Conditions
// Long Entry Conditions
long_condition1 = uptrend and bullish_momentum
long_condition2 = close > ema9 and ema9 > ema21
long_condition3 = rsi > rsi_oversold and rsi < 80
long_condition4 = macd_line > signal_line and histogram > histogram[1]
long_condition5 = close > bb_lower and close < bb_upper
long_condition6 = volume_confirmation
long_condition7 = williams_r > -80
long_condition8 = close > sar
long_condition9 = vpt > vpt_sma
long_condition10 = k > 20 and k < 80

long_entry = long_condition1 and long_condition2 and long_condition3 and long_condition4 and long_condition5 and long_condition6 and long_condition7 and long_condition8 and long_condition9 and long_condition10

// Short Entry Conditions
short_condition1 = downtrend and bearish_momentum
short_condition2 = close < ema9 and ema9 < ema21
short_condition3 = rsi < rsi_overbought and rsi > 20
short_condition4 = macd_line < signal_line and histogram < histogram[1]
short_condition5 = close < bb_upper and close > bb_lower
short_condition6 = volume_confirmation
short_condition7 = williams_r < -20
short_condition8 = close < sar
short_condition9 = vpt < vpt_sma
short_condition10 = k < 80 and k > 20

short_entry = short_condition1 and short_condition2 and short_condition3 and short_condition4 and short_condition5 and short_condition6 and short_condition7 and short_condition8 and short_condition9 and short_condition10

// Exit Conditions
// Long Exit
long_exit_profit = rsi > rsi_overbought or close > bb_upper or williams_r > -20 or close < sar
long_exit_loss = close < ema21 or macd_line < signal_line or rsi < 30

// Short Exit
short_exit_profit = rsi < rsi_oversold or close < bb_lower or williams_r < -80 or close > sar
short_exit_loss = close > ema21 or macd_line > signal_line or rsi > 70

// Strategy Execution
if long_entry and strategy.position_size == 0
    stop_loss = close - (atr * atr_mult)
    take_profit = close + (atr * atr_mult * risk_reward_ratio)
    strategy.entry("Long", strategy.long)
    strategy.exit("Long Exit", "Long", stop=stop_loss, limit=take_profit)

if short_entry and strategy.position_size == 0
    stop_loss = close + (atr * atr_mult)
    take_profit = close - (atr * atr_mult * risk_reward_ratio)
    strategy.entry("Short", strategy.short)
    strategy.exit("Short Exit", "Short", stop=stop_loss, limit=take_profit)

// Additional exit conditions
if strategy.position_size > 0 and long_exit_profit
    strategy.close("Long", comment="Long Profit Exit")

if strategy.position_size > 0 and long_exit_loss
    strategy.close("Long", comment="Long Loss Exit")

if strategy.position_size < 0 and short_exit_profit
    strategy.close("Short", comment="Short Profit Exit")

if strategy.position_size < 0 and short_exit_loss
    strategy.close("Short", comment="Short Loss Exit")

// Plotting
plot(ema9, color=color.blue, linewidth=2, title="EMA 9")
plot(ema21, color=color.red, linewidth=2, title="EMA 21")
plot(sma50, color=color.yellow, linewidth=3, title="SMA 50")

plot(bb_upper, color=color.gray, title="BB Upper")
plot(bb_lower, color=color.gray, title="BB Lower")
plot(bb_middle, color=color.gray, title="BB Middle")

plot(sar, color=close > sar ? color.green : color.red, style=plot.style_cross, linewidth=2, title="Parabolic SAR")

// Signal Arrows
plotshape(long_entry, style=shape.triangleup, location=location.belowbar, color=color.green, size=size.normal, title="Long Entry")
plotshape(short_entry, style=shape.triangledown, location=location.abovebar, color=color.red, size=size.normal, title="Short Entry")

// Background color for trend
bgcolor(uptrend ? color.new(color.green, 95) : downtrend ? color.new(color.red, 95) : na)

// Display information table
var table info_table = table.new(position.top_right, 2, 10, bgcolor=color.white, border_width=1)

if barstate.islast
    table.cell(info_table, 0, 0, "RSI", text_color=color.black)
    table.cell(info_table, 1, 0, str.tostring(math.round(rsi, 2)), text_color=color.black)
    
    table.cell(info_table, 0, 1, "MACD", text_color=color.black)
    table.cell(info_table, 1, 1, str.tostring(math.round(macd_line, 4)), text_color=color.black)
    
    table.cell(info_table, 0, 2, "Volume Ratio", text_color=color.black)
    table.cell(info_table, 1, 2, str.tostring(math.round(volume/volume_ma, 2)), text_color=color.black)
    
    table.cell(info_table, 0, 3, "Williams %R", text_color=color.black)
    table.cell(info_table, 1, 3, str.tostring(math.round(williams_r, 2)), text_color=color.black)
    
    table.cell(info_table, 0, 4, "Stochastic K", text_color=color.black)
    table.cell(info_table, 1, 4, str.tostring(math.round(k, 2)), text_color=color.black)
    
    table.cell(info_table, 0, 5, "Trend", text_color=color.black)
    table.cell(info_table, 1, 5, uptrend ? "UP" : downtrend ? "DOWN" : "SIDEWAYS", 
               text_color=uptrend ? color.green : downtrend ? color.red : color.gray)
    
    table.cell(info_table, 0, 6, "Position", text_color=color.black)
    table.cell(info_table, 1, 6, strategy.position_size > 0 ? "LONG" : strategy.position_size < 0 ? "SHORT" : "NONE",
               text_color=strategy.position_size > 0 ? color.green : strategy.position_size < 0 ? color.red : color.gray)
    
    table.cell(info_table, 0, 7, "P&L", text_color=color.black)
    table.cell(info_table, 1, 7, str.tostring(math.round(strategy.netprofit, 2)),
               text_color=strategy.netprofit > 0 ? color.green : color.red)
    
    table.cell(info_table, 0, 8, "Win Rate", text_color=color.black)
    table.cell(info_table, 1, 8, str.tostring(math.round(strategy.wintrades/strategy.closedtrades*100, 1)) + "%",
               text_color=color.black)
    
    table.cell(info_table, 0, 9, "Total Trades", text_color=color.black)
    table.cell(info_table, 1, 9, str.tostring(strategy.closedtrades), text_color=color.black)

// Alerts
alertcondition(long_entry, title="Long Entry Signal", message="NIFTY 50 Long Entry - All conditions met")
alertcondition(short_entry, title="Short Entry Signal", message="NIFTY 50 Short Entry - All conditions met")
alertcondition(long_exit_profit or long_exit_loss, title="Long Exit Signal", message="NIFTY 50 Long Exit")
alertcondition(short_exit_profit or short_exit_loss, title="Short Exit Signal", message="NIFTY 50 Short Exit")